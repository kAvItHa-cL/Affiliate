<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BitlyAPI</name>
    </assembly>
    <members>
        <member name="T:BitlyAPI.Bitly">
            <summary>
            Implements Most of the bitly API as a hard typed c# library
            Provide an access token when you initialize the class or in your web config under the name bitlyAccess_Token 
            See: https://bitly.com/a/oauth_apps
            TODO: metrics http://dev.bitly.com/link_metrics.html
            TODO: network_history and tracking domain_list http://dev.bitly.com/user_info.html
            The framework is in place to add the rest of the API but I have not until I found a use for it.
            See http://dev.bitly.com/links.html for more information
            
            </summary>
        </member>
        <member name="M:BitlyAPI.Bitly.#ctor(System.String)">
            <summary>
            Initialize the Bitly api with an access token
            Create your token at https://bitly.com/a/oauth_apps
            for more information http://dev.bitly.com/authentication.html
            </summary>
            <param name="accessToken"></param>
        </member>
        <member name="M:BitlyAPI.Bitly.GetResponseDict(System.String,System.Collections.Generic.Dictionary{System.String,System.String})">
            <summary>
            Helper function that takes the parameters as a dictionary[string,string]
            This makes it easy to to just and and forget parameters and let the software build teh request
            </summary>
            <param name="command"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:BitlyAPI.Bitly.GetResponseObj(System.String,System.Object)">
            <summary>
            Takes the parameters as an anonymous object
            </summary>
            <param name="command"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="P:BitlyAPI.Bitly.AccessToken">
            <summary>
            Access token is the best form of authentication you can get your access token at https://bitly.com/a/oauth_apps
            </summary>
        </member>
        <member name="M:BitlyAPI.Bitly.GetResponse(System.String,System.String)">
            <summary>
            Helper function for getting a response wants the parameters as a pre formed URL string
            </summary>
            <param name="command"></param>
            <param name="parameters"></param>
            <returns></returns>
        </member>
        <member name="M:BitlyAPI.Bitly.Expand(System.String)">
            <summary>
            Get the long Url and other information given a short url
            </summary>
            <param name="shortUrl">Short Url : example http://bit.ly/XIu3w or http://cnan.ca/Zv2BBM </param>
            <returns></returns>
        </member>
        <member name="M:BitlyAPI.Bitly.Info(System.String,System.String)">
            <summary>
            This is used to return the page title for a given bitly link.
            </summary>
            <param name="shortUrl"></param>
            <param name="hash"></param>
            <returns></returns>
        </member>
        <member name="M:BitlyAPI.Bitly.LinkLookup(System.String)">
            <summary>
            http://dev.bitly.com/links.html#v3_link_lookup
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:BitlyAPI.Bitly.UserLinkLookup(System.String)">
            <summary>
            http://dev.bitly.com/links.html#v3_user_link_lookup
            </summary>
            <param name="url"></param>
            <returns></returns>
        </member>
        <member name="M:BitlyAPI.Bitly.Shorten(System.String,System.String)">
            <summary>
            Link Save gives you more options and should likely be used but this will also shorted a link.
            http://dev.bitly.com/links.html#v3_shorten
            </summary>
            <param name="longUrl"></param>
            <param name="domain"></param>
            <returns></returns>
        </member>
        <member name="M:BitlyAPI.Bitly.LinkEdit(System.String,System.String,System.String,System.Boolean,System.Double,System.Boolean,System.Collections.Generic.List{System.String})">
            <summary>
            http://dev.bitly.com/links.html#v3_user_link_edit
            </summary>
            <param name="link"></param>
            <param name="title"></param>
            <param name="note"></param>
            <param name="isPrivate"></param>
            <param name="userTs"></param>
            <param name="archived"></param>
            <param name="editList"></param>
            <returns></returns>
        </member>
        <member name="M:BitlyAPI.Bitly.UserLinkSave(System.String,System.String,System.String,System.Boolean)">
            <summary>
            http://dev.bitly.com/links.html#v3_user_link_save
            </summary>
            <param name="longUrl"></param>
            <param name="title"></param>
            <param name="note"></param>
            <param name="isPrivate"></param>
            <returns></returns>
        </member>
        <member name="M:BitlyAPI.Bitly.UserSaveCustomDomainKeyword(System.String,System.String,System.Boolean)">
            <summary>
            http://dev.bitly.com/links.html#v3_user_save_custom_domain_keyword
            Not tested as I don't have a paid account if someone has a paid account and can send me a copy of the json response. It's not documented on bitlys site.
            </summary>
            <param name="keywordLink"></param>
            <param name="targetLink"></param>
            <param name="overwrite"></param>
            <returns></returns>
        </member>
        <member name="M:BitlyAPI.Bitly.UserInfo(System.String,System.String)">
            <summary>
            http://dev.bitly.com/user_info.html#v3_user_info
            </summary>
            <param name="login"></param>
            <param name="fullName"></param>
            <returns></returns>
        </member>
        <member name="M:BitlyAPI.Bitly.UserLinkHistory(System.String,System.Int32,System.Int32,System.Boolean,System.Boolean,System.String,System.Int64,System.Int64,System.Int64)">
            <summary>
            Gets a users link history.
            ExpandClientID is not supported because it changes the type of a client ID and this conflicts with a static typed language and is ignored for now
            http://dev.bitly.com/user_info.html#v3_user_link_history
            </summary>
            <param name="link"></param>
            <param name="limit"></param>
            <param name="offset"></param>
            <param name="expandClientID">Ignored</param>
            <param name="isPrivate"></param>
            <param name="user"></param>
            <param name="created_after"></param>
            <param name="modified_after"></param>
            <param name="created_before"></param>
            <returns></returns>
        </member>
        <member name="T:BitlyAPI.BitlyResponse">
            <summary>
            DataType for all returned Classes
            </summary>
        </member>
        <member name="T:BitlyAPI.BitlyResponseData">
            <summary>
            This represents the data part of the Bitly response
            </summary>
        </member>
        <member name="P:BitlyAPI.BitlyResponseData.domain_options">
            <summary>
            domain_options is domain_preference_options in the documentation, the official documentation is wrong
            </summary>
        </member>
        <member name="T:BitlyAPI.BitlyLinkHistoryItem">
            <summary>
            http://dev.bitly.com/user_info.html#v3_user_link_history
            </summary>
        </member>
    </members>
</doc>
